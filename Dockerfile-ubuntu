# Single-stage: everything in one image (teaching demo)
FROM ubuntu:22.04

# 1) Tools to BUILD and RUN
RUN apt-get update -y \
 && apt-get install -y default-jdk maven wget ca-certificates curl \
 && rm -rf /var/lib/apt/lists/*

# 2) Build the WAR (host -> image)
WORKDIR /src
COPY pom.xml .
RUN mvn -q -DskipTests dependency:go-offline
COPY src ./src
RUN mvn -q -DskipTests package
# WAR produced at /src/target/java-tomcat-maven-example.war

# 3) Install Tomcat (pin version)
ENV TOMCAT_VER=9.0.8
WORKDIR /opt
RUN wget -q https://archive.apache.org/dist/tomcat/tomcat-9/v${TOMCAT_VER}/bin/apache-tomcat-${TOMCAT_VER}.tar.gz \
 && tar -xzf apache-tomcat-${TOMCAT_VER}.tar.gz -C /opt \
 && ln -sfn /opt/apache-tomcat-${TOMCAT_VER} /opt/tomcat

# 4) Non-root user and ownership (safer than chmod 777)
RUN groupadd -r tomcat \
 && useradd -r -g tomcat -d /opt/tomcat -s /usr/sbin/nologin tomcat \
 && chown -R tomcat:tomcat /opt/apache-tomcat-${TOMCAT_VER}

# 5) Deploy WAR as ROOT (served at "/")
WORKDIR /opt/tomcat/webapps
RUN rm -rf ROOT
RUN cp /src/target/java-tomcat-maven-example.war ./ROOT.war

# 6) Run Tomcat in foreground (container-friendly)
EXPOSE 8080
USER tomcat
CMD ["/opt/tomcat/bin/catalina.sh", "run"]
